{"ast":null,"code":"var _jsxFileName = \"/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  var _location$state;\n  const [contacts, setContacts] = useState([]);\n  const [isCreatingGroup, setIsCreatingGroup] = useState(false);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [groupName, setGroupName] = useState(\"\");\n  const location = useLocation();\n  const emailFromLogin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.emailFromLogin;\n  console.log(\"i am sanchit\");\n  console.log(emailFromLogin);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/contacts\", {\n          params: {\n            email: emailFromLogin\n          }\n        });\n\n        // Process the response to create simplified contacts array with IDs\n        const processedContacts = response.data.map((contact, index) => ({\n          id: index + 1,\n          // Assign incrementing ID starting from 1\n          email: contact // Assume there's at least one email address\n        }));\n        setContacts(processedContacts);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n        // Handle error state or logging as needed\n      }\n    };\n    fetchContacts(); // Call fetchContacts when component mounts\n  }, [emailFromLogin]); // Empty dependency array ensures fetchContacts runs only once\n\n  const handleCheckboxChange = (name, email) => {\n    const contactIdentifier = `${name}-${email}`;\n    setSelectedContacts(prevSelectedContacts => prevSelectedContacts.includes(contactIdentifier) ? prevSelectedContacts.filter(id => id !== contactIdentifier) : [...prevSelectedContacts, contactIdentifier]);\n  };\n  const handleCreateGroupClick = () => {\n    setIsCreatingGroup(true);\n  };\n  const handleGroupNameChange = event => {\n    setGroupName(event.target.value);\n  };\n  const handleSubmitGroup = () => {\n    axios.post(\"http://localhost:3001/create-group\", {\n      groupName,\n      contacts: selectedContacts\n    }).then(response => {\n      console.log(response.data);\n      // Handle success response\n    }).catch(error => {\n      console.error(error);\n      // Handle error response\n    });\n    setIsCreatingGroup(false);\n    setSelectedContacts([]);\n    setGroupName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [isCreatingGroup && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedContacts.includes(contact.email),\n          onChange: () => handleCheckboxChange(contact.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), contact.name, \": \", contact.email]\n      }, contact.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGroupClick,\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), isCreatingGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group Name\",\n        value: groupName,\n        onChange: handleGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitGroup,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Contacts, \"sMrCM7xJ5aiZf/v2G2oC6m5C1kg=\", false, function () {\n  return [useLocation];\n});\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","jsxDEV","_jsxDEV","Contacts","_s","_location$state","contacts","setContacts","isCreatingGroup","setIsCreatingGroup","selectedContacts","setSelectedContacts","groupName","setGroupName","location","emailFromLogin","state","console","log","fetchContacts","response","get","params","email","processedContacts","data","map","contact","index","id","error","handleCheckboxChange","name","contactIdentifier","prevSelectedContacts","includes","filter","handleCreateGroupClick","handleGroupNameChange","event","target","value","handleSubmitGroup","post","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/Contacts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nconst Contacts = () => {\n  const [contacts, setContacts] = useState([]);\n  const [isCreatingGroup, setIsCreatingGroup] = useState(false);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [groupName, setGroupName] = useState(\"\");\n  const location = useLocation();\n  const emailFromLogin = location.state?.emailFromLogin;\n  console.log(\"i am sanchit\");\n  console.log(emailFromLogin);\n\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/contacts\", {\n          params: {\n            email: emailFromLogin,\n          },\n        });\n\n        // Process the response to create simplified contacts array with IDs\n        const processedContacts = response.data.map((contact, index) => ({\n          id: index + 1, // Assign incrementing ID starting from 1\n          email: contact, // Assume there's at least one email address\n        }));\n\n        setContacts(processedContacts);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n        // Handle error state or logging as needed\n      }\n    };\n\n    fetchContacts(); // Call fetchContacts when component mounts\n  }, [emailFromLogin]); // Empty dependency array ensures fetchContacts runs only once\n\n  const handleCheckboxChange = (name, email) => {\n    const contactIdentifier = `${name}-${email}`;\n    setSelectedContacts((prevSelectedContacts) =>\n      prevSelectedContacts.includes(contactIdentifier)\n        ? prevSelectedContacts.filter((id) => id !== contactIdentifier)\n        : [...prevSelectedContacts, contactIdentifier]\n    );\n  };\n\n  const handleCreateGroupClick = () => {\n    setIsCreatingGroup(true);\n  };\n\n  const handleGroupNameChange = (event) => {\n    setGroupName(event.target.value);\n  };\n\n  const handleSubmitGroup = () => {\n    axios\n      .post(\"http://localhost:3001/create-group\", {\n        groupName,\n        contacts: selectedContacts,\n      })\n      .then((response) => {\n        console.log(response.data);\n        // Handle success response\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle error response\n      });\n    setIsCreatingGroup(false);\n    setSelectedContacts([]);\n    setGroupName(\"\");\n  };\n\n  return (\n    <div>\n      <h1>Contacts</h1>\n      <ul>\n        {contacts.map((contact) => (\n          <li key={contact.email}>\n            {isCreatingGroup && (\n              <input\n                type=\"checkbox\"\n                checked={selectedContacts.includes(contact.email)}\n                onChange={() => handleCheckboxChange(contact.email)}\n              />\n            )}\n            {contact.name}: {contact.email}\n          </li>\n        ))}\n      </ul>\n      <button onClick={handleCreateGroupClick}>Create Group</button>\n      {isCreatingGroup && (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Group Name\"\n            value={groupName}\n            onChange={handleGroupNameChange}\n          />\n          <button onClick={handleSubmitGroup}>Submit</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}