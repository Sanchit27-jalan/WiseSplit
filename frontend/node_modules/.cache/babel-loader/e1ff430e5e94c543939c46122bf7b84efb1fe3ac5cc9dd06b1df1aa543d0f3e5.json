{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gupta ji\\\\Desktop\\\\harshit\\\\hello\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '716338759481-3t52ihgb9pa4ifk96mjnlehh8c0idr07.apps.googleusercontent.com';\nconst clientSecret = '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';\nconst Login = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const emailFromLogin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n  const googleLogin = useGoogleLogin({\n    onSuccess: async res => {\n      const code = res.code;\n      console.log(code, emailFromLogin);\n      try {\n        const response = await axios.post('https://oauth2.googleapis.com/token', {\n          code,\n          client_id: CLIENT_ID,\n          client_secret: clientSecret,\n          redirect_uri: 'http://localhost:3000/',\n          grant_type: 'authorization_code'\n        });\n        const {\n          access_token\n        } = response.data;\n        console.log(access_token, \"Access token\");\n        await axios.post('http://localhost:3001/oauth2callback', {\n          codes: access_token,\n          email: emailFromLogin\n        });\n        navigate('/contact', {\n          state: {\n            email: emailFromLogin\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    onFailure: error => {\n      console.log(\"Error logging in with Google:\", error);\n    },\n    flow: 'authCode',\n    scope: 'https://www.googleapis.com/auth/contacts.readonly',\n    clientId: CLIENT_ID,\n    redirect_uri: 'http://localhost:3000/'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/contacts\",\n      className: \"list-group-item list-group-item-action\",\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"list-group-item list-group-item-action\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"list-group-item list-group-item-action\",\n      onClick: () => googleLogin(),\n      children: \"Sign in with Google to import your Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"S3X3sCaVGXs0vo3MF5exQzLJ3Ag=\", false, function () {\n  return [useLocation, useNavigate, useGoogleLogin];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useGoogleLogin","Link","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","CLIENT_ID","clientSecret","Login","_s","_location$state","location","navigate","emailFromLogin","state","email","googleLogin","onSuccess","res","code","console","log","response","post","client_id","client_secret","redirect_uri","grant_type","access_token","data","codes","error","onFailure","flow","scope","clientId","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gupta ji/Desktop/harshit/hello/frontend/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst CLIENT_ID = '716338759481-3t52ihgb9pa4ifk96mjnlehh8c0idr07.apps.googleusercontent.com';\r\nconst clientSecret = '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';\r\n\r\nconst Login = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const emailFromLogin = location.state?.email;\r\n  \r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: async (res) => {\r\n      const code = res.code;\r\n      console.log(code, emailFromLogin);\r\n      \r\n      try {\r\n        const response = await axios.post('https://oauth2.googleapis.com/token', {\r\n          code,\r\n          client_id: CLIENT_ID,\r\n          client_secret: clientSecret,\r\n          redirect_uri: 'http://localhost:3000/',\r\n          grant_type: 'authorization_code',\r\n        });\r\n\r\n        const { access_token } = response.data;\r\n        console.log(access_token, \"Access token\");\r\n\r\n        await axios.post('http://localhost:3001/oauth2callback', { codes: access_token, email: emailFromLogin });\r\n        navigate('/contact', { state: { email: emailFromLogin } });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    onFailure: (error) => {\r\n      console.log(\"Error logging in with Google:\", error);\r\n    },\r\n    flow: 'authCode',\r\n    scope: 'https://www.googleapis.com/auth/contacts.readonly',\r\n    clientId: CLIENT_ID,\r\n    redirect_uri: 'http://localhost:3000/',\r\n  });\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Link to=\"/contacts\" className=\"list-group-item list-group-item-action\">\r\n        Friends\r\n      </Link>\r\n      <Link to=\"#\" className=\"list-group-item list-group-item-action\">\r\n        Groups\r\n      </Link>\r\n      <button className=\"list-group-item list-group-item-action\" onClick={() => googleLogin()}>\r\n        Sign in with Google to import your Contacts\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}