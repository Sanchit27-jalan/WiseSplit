{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gupta ji\\\\Desktop\\\\harshit\\\\hello\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nuseG;\nconst Login = ({\n  onSuccess,\n  onFailure\n}) => {\n  _s();\n  const googleLogin = useGoogleLogin({\n    onSuccess: tokenResponse => {\n      console.log('Google login successful', tokenResponse);\n      // You can now use the tokenResponse to authenticate the user in your app\n    },\n    onError: () => {\n      console.error('Google login failed');\n      // Handle login errors here\n    },\n    flow: 'auth-code' // Use 'auth-code' for the authorization code flow\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/contacts\",\n      className: \"list-group-item list-group-item-action \",\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"list-group-item list-group-item-action\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      render: renderProps,\n      buttonText: \"Sign with Google to Import Contacts\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      scope: \"https://www.googleapis.com/auth/contacts.readonly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"29qPuCPLJRfUNF9RkXDE8/BpYpE=\", true);\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","GoogleLogin","Link","jsxDEV","_jsxDEV","useG","Login","onSuccess","onFailure","_s","googleLogin","useGoogleLogin","tokenResponse","console","log","onError","error","flow","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","render","renderProps","buttonText","scope","_c","$RefreshReg$"],"sources":["C:/Users/Gupta ji/Desktop/harshit/hello/frontend/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { Link } from 'react-router-dom';\r\nuseG\r\nconst Login = ({ onSuccess, onFailure }) => {\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess: (tokenResponse) => {\r\n      console.log('Google login successful', tokenResponse);\r\n      // You can now use the tokenResponse to authenticate the user in your app\r\n    },\r\n    onError: () => {\r\n      console.error('Google login failed');\r\n      // Handle login errors here\r\n    },\r\n    flow: 'auth-code', // Use 'auth-code' for the authorization code flow\r\n  });\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Link to=\"/contacts\" className=\"list-group-item list-group-item-action \">\r\n        Friends\r\n      </Link>\r\n      <Link to=\"#\" className=\"list-group-item list-group-item-action\">\r\n        Groups\r\n      </Link>\r\n      <GoogleLogin\r\n        render={renderProps}\r\n        buttonText=\"Sign with Google to Import Contacts\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        scope=\"https://www.googleapis.com/auth/contacts.readonly\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxCC,IAAI;AACJ,MAAMC,KAAK,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,WAAW,GAAGC,cAAc,CAAC;IACjCJ,SAAS,EAAGK,aAAa,IAAK;MAC5BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,aAAa,CAAC;MACrD;IACF,CAAC;IACDG,OAAO,EAAEA,CAAA,KAAM;MACbF,OAAO,CAACG,KAAK,CAAC,qBAAqB,CAAC;MACpC;IACF,CAAC;IACDC,IAAI,EAAE,WAAW,CAAE;EACrB,CAAC,CAAC;EAEF,oBACEb,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBf,OAAA,CAACF,IAAI;MAACkB,EAAE,EAAC,WAAW;MAACF,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAEzE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPpB,OAAA,CAACF,IAAI;MAACkB,EAAE,EAAC,GAAG;MAACF,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAAC;IAEhE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPpB,OAAA,CAACH,WAAW;MACVwB,MAAM,EAAEC,WAAY;MACpBC,UAAU,EAAC,qCAAqC;MAChDpB,SAAS,EAAEA,SAAU;MACrBC,SAAS,EAAEA,SAAU;MACrBoB,KAAK,EAAC;IAAmD;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BIH,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}