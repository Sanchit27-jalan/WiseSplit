{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gupta ji\\\\Desktop\\\\harshit\\\\hello\\\\frontend\\\\src\\\\components\\\\Contacts.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s2();\n  const [contacts, setContacts] = useState([]);\n  const [isCreatingGroup, setIsCreatingGroup] = useState(false);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchContacts = async () => {\n      _s();\n      var _location$state;\n      const location = useLocation();\n      const emailFromLogin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n      const response = await axios.get('http://localhost:3001/contacts', {\n        params: {\n          email: token\n        }\n      });\n      // Process the response to create simplified contacts array with IDs\n      const processedContacts = response.data.filter(contact => contact.emailAddresses && contact.emailAddresses.length > 0).map((contact, index) => ({\n        id: index + 1,\n        // Assign incrementing ID starting from 1\n        name: contact.names && contact.names.length > 0 ? contact.names[0].displayName : 'No Name',\n        email: contact.emailAddresses[0].value // Assume there's at least one email address\n      }));\n      setContacts(processedContacts);\n    };\n    _s(fetchContacts, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", true);\n    fetchContacts();\n  }, []);\n  const handleCheckboxChange = (name, email) => {\n    const contactIdentifier = `${name}-${email}`;\n    setSelectedContacts(prevSelectedContacts => prevSelectedContacts.includes(contactIdentifier) ? prevSelectedContacts.filter(id => id !== contactIdentifier) : [...prevSelectedContacts, contactIdentifier]);\n  };\n  const handleCreateGroupClick = () => {\n    setIsCreatingGroup(true);\n  };\n  const handleGroupNameChange = event => {\n    setGroupName(event.target.value);\n  };\n  const handleSubmitGroup = () => {\n    axios.post('http://localhost:3001/create-group', {\n      groupName,\n      contacts: selectedContacts\n    }).then(response => {\n      console.log(response.data);\n      // Handle success response\n    }).catch(error => {\n      console.error(error);\n      // Handle error response\n    });\n    setIsCreatingGroup(false);\n    setSelectedContacts([]);\n    setGroupName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [isCreatingGroup && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedContacts.includes(`${contact.name}-${contact.email}`),\n          onChange: () => handleCheckboxChange(contact.name, contact.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), contact.name, \": \", contact.email]\n      }, `${contact.name}-${contact.email}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGroupClick,\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), isCreatingGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group Name\",\n        value: groupName,\n        onChange: handleGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitGroup,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s2(Contacts, \"4eL6quPQEt1p8OUV7GiTmeC99ds=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Contacts","_s2","contacts","setContacts","isCreatingGroup","setIsCreatingGroup","selectedContacts","setSelectedContacts","groupName","setGroupName","_s","$RefreshSig$","fetchContacts","_location$state","location","useLocation","emailFromLogin","state","email","response","get","params","token","processedContacts","data","filter","contact","emailAddresses","length","map","index","id","name","names","displayName","value","handleCheckboxChange","contactIdentifier","prevSelectedContacts","includes","handleCreateGroupClick","handleGroupNameChange","event","target","handleSubmitGroup","post","then","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Gupta ji/Desktop/harshit/hello/frontend/src/components/Contacts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Contacts = () => {\r\n    const [contacts, setContacts] = useState([]);\r\n    const [isCreatingGroup, setIsCreatingGroup] = useState(false);\r\n    const [selectedContacts, setSelectedContacts] = useState([]);\r\n    const [groupName, setGroupName] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchContacts = async () => {\r\n            const location = useLocation();\r\n            const emailFromLogin = location.state?.email\r\n                    const response = await axios.get('http://localhost:3001/contacts', {\r\n                        params: {\r\n                            email: token,\r\n                        },\r\n                    });\r\n                    // Process the response to create simplified contacts array with IDs\r\n                    const processedContacts = response.data\r\n                        .filter(contact => contact.emailAddresses && contact.emailAddresses.length > 0)\r\n                        .map((contact, index) => ({\r\n                            id: index + 1, // Assign incrementing ID starting from 1\r\n                            name: contact.names && contact.names.length > 0 ? contact.names[0].displayName : 'No Name',\r\n                            email: contact.emailAddresses[0].value // Assume there's at least one email address\r\n                        }));\r\n\r\n                    setContacts(processedContacts);\r\n                 \r\n            \r\n        };\r\n\r\n        fetchContacts();\r\n    }, []);\r\n\r\n    const handleCheckboxChange = (name, email) => {\r\n        const contactIdentifier = `${name}-${email}`;\r\n        setSelectedContacts(prevSelectedContacts => \r\n            prevSelectedContacts.includes(contactIdentifier)\r\n                ? prevSelectedContacts.filter(id => id !== contactIdentifier)\r\n                : [...prevSelectedContacts, contactIdentifier]\r\n        );\r\n    };\r\n\r\n    const handleCreateGroupClick = () => {\r\n        setIsCreatingGroup(true);\r\n    };\r\n\r\n    const handleGroupNameChange = (event) => {\r\n        setGroupName(event.target.value);\r\n    };\r\n\r\n    const handleSubmitGroup = () => {\r\n        axios.post('http://localhost:3001/create-group', { groupName, contacts: selectedContacts })\r\n            .then(response => {\r\n                console.log(response.data);\r\n                // Handle success response\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n                // Handle error response\r\n            });\r\n        setIsCreatingGroup(false);\r\n        setSelectedContacts([]);\r\n        setGroupName('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Contacts</h1>\r\n            <ul>\r\n                {contacts.map(contact => (\r\n                    <li key={`${contact.name}-${contact.email}`}>\r\n                        {isCreatingGroup && \r\n                            <input \r\n                                type=\"checkbox\" \r\n                                checked={selectedContacts.includes(`${contact.name}-${contact.email}`)} \r\n                                onChange={() => handleCheckboxChange(contact.name, contact.email)}\r\n                            />\r\n                        }\r\n                        {contact.name}: {contact.email}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={handleCreateGroupClick}>Create Group</button>\r\n            {isCreatingGroup && (\r\n                <div>\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Group Name\" \r\n                        value={groupName} \r\n                        onChange={handleGroupNameChange} \r\n                    />\r\n                    <button onClick={handleSubmitGroup}>Submit</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}