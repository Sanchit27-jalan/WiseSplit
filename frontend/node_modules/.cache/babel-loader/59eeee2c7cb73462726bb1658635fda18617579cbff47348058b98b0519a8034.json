{"ast":null,"code":"var _jsxFileName = \"/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [isCreatingGroup, setIsCreatingGroup] = useState(false);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  useEffect(() => {\n    const fetchContacts = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          console.log(\"The token is \", token);\n          const response = await axios.get('http://localhost:3001/contacts', {\n            params: {\n              access_token: token\n            }\n          });\n          // Process the response to create simplified contacts array with IDs\n          const processedContacts = response.data.filter(contact => contact.emailAddresses && contact.emailAddresses.length > 0).map((contact, index) => ({\n            id: index + 1,\n            // Assign incrementing ID starting from 1\n            name: contact.names && contact.names.length > 0 ? contact.names[0].displayName : 'No Name',\n            email: contact.emailAddresses[0].value // Assume there's at least one email address\n          }));\n          setContacts(processedContacts);\n        } catch (error) {\n          console.error('Error fetching contacts', error);\n        }\n      }\n    };\n    fetchContacts();\n  }, []);\n  const handleCheckboxChange = (name, email) => {\n    const contactIdentifier = `${name}-${email}`;\n    setSelectedContacts(prevSelectedContacts => prevSelectedContacts.includes(contactIdentifier) ? prevSelectedContacts.filter(id => id !== contactIdentifier) : [...prevSelectedContacts, contactIdentifier]);\n  };\n  const handleCreateGroupClick = () => {\n    setIsCreatingGroup(true);\n  };\n  const handleGroupNameChange = event => {\n    setGroupName(event.target.value);\n  };\n  const handleSubmitGroup = () => {\n    axios.post('http://localhost:3001/api/create-group', {\n      groupName,\n      contacts: selectedContacts\n    }).then(response => {\n      console.log(response.data);\n      // Handle success response\n    }).catch(error => {\n      console.error(error);\n      // Handle error response\n    });\n    setIsCreatingGroup(false);\n    setSelectedContacts([]);\n    setGroupName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [isCreatingGroup && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedContacts.includes(`${contact.name}-${contact.email}`),\n          onChange: () => handleCheckboxChange(contact.name, contact.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), contact.name, \": \", contact.email]\n      }, `${contact.name}-${contact.email}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGroupClick,\n      children: \"Create Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), isCreatingGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group Name\",\n        value: groupName,\n        onChange: handleGroupNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmitGroup,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Contacts, \"4eL6quPQEt1p8OUV7GiTmeC99ds=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","isCreatingGroup","setIsCreatingGroup","selectedContacts","setSelectedContacts","groupName","setGroupName","fetchContacts","token","localStorage","getItem","console","log","response","get","params","access_token","processedContacts","data","filter","contact","emailAddresses","length","map","index","id","name","names","displayName","email","value","error","handleCheckboxChange","contactIdentifier","prevSelectedContacts","includes","handleCreateGroupClick","handleGroupNameChange","event","target","handleSubmitGroup","post","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/Contacts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Contacts = () => {\n    const [contacts, setContacts] = useState([]);\n    const [isCreatingGroup, setIsCreatingGroup] = useState(false);\n    const [selectedContacts, setSelectedContacts] = useState([]);\n    const [groupName, setGroupName] = useState('');\n\n    useEffect(() => {\n        const fetchContacts = async () => {\n            const token = localStorage.getItem('access_token');\n            if (token) {\n                try {\n                    console.log(\"The token is \", token);\n                    const response = await axios.get('http://localhost:3001/contacts', {\n                        params: {\n                            access_token: token,\n                        },\n                    });\n                    // Process the response to create simplified contacts array with IDs\n                    const processedContacts = response.data\n                        .filter(contact => contact.emailAddresses && contact.emailAddresses.length > 0)\n                        .map((contact, index) => ({\n                            id: index + 1, // Assign incrementing ID starting from 1\n                            name: contact.names && contact.names.length > 0 ? contact.names[0].displayName : 'No Name',\n                            email: contact.emailAddresses[0].value // Assume there's at least one email address\n                        }));\n\n                    setContacts(processedContacts);\n                } catch (error) {\n                    console.error('Error fetching contacts', error);\n                }\n            }\n        };\n\n        fetchContacts();\n    }, []);\n\n    const handleCheckboxChange = (name, email) => {\n        const contactIdentifier = `${name}-${email}`;\n        setSelectedContacts(prevSelectedContacts => \n            prevSelectedContacts.includes(contactIdentifier)\n                ? prevSelectedContacts.filter(id => id !== contactIdentifier)\n                : [...prevSelectedContacts, contactIdentifier]\n        );\n    };\n\n    const handleCreateGroupClick = () => {\n        setIsCreatingGroup(true);\n    };\n\n    const handleGroupNameChange = (event) => {\n        setGroupName(event.target.value);\n    };\n\n    const handleSubmitGroup = () => {\n        axios.post('http://localhost:3001/api/create-group', { groupName, contacts: selectedContacts })\n            .then(response => {\n                console.log(response.data);\n                // Handle success response\n            })\n            .catch(error => {\n                console.error(error);\n                // Handle error response\n            });\n        setIsCreatingGroup(false);\n        setSelectedContacts([]);\n        setGroupName('');\n    };\n\n    return (\n        <div>\n            <h1>Contacts</h1>\n            <ul>\n                {contacts.map(contact => (\n                    <li key={`${contact.name}-${contact.email}`}>\n                        {isCreatingGroup && \n                            <input \n                                type=\"checkbox\" \n                                checked={selectedContacts.includes(`${contact.name}-${contact.email}`)} \n                                onChange={() => handleCheckboxChange(contact.name, contact.email)}\n                            />\n                        }\n                        {contact.name}: {contact.email}\n                    </li>\n                ))}\n            </ul>\n            <button onClick={handleCreateGroupClick}>Create Group</button>\n            {isCreatingGroup && (\n                <div>\n                    <input \n                        type=\"text\" \n                        placeholder=\"Group Name\" \n                        value={groupName} \n                        onChange={handleGroupNameChange} \n                    />\n                    <button onClick={handleSubmitGroup}>Submit</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Contacts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}