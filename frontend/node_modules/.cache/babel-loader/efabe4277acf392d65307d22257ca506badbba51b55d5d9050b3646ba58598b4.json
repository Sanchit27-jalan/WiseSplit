{"ast":null,"code":"var _jsxFileName = \"/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    const fetchContacts = async () => {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        try {\n          console.log(\"The token is \", token);\n          const response = await axios.get('http://localhost:3001/contacts', {\n            params: {\n              access_token: token\n            }\n          });\n          // Process the response to create simplified contacts array with IDs\n          const processedContacts = response.data.filter(contact => contact.emailAddresses && contact.emailAddresses.length > 0).map((contact, index) => ({\n            id: index + 1,\n            // Assign incrementing ID starting from 1\n            name: contact.names && contact.names.length > 0 ? contact.names[0].displayName : 'No Name',\n            email: contact.emailAddresses[0].value // Assume there's at least one email address\n          }));\n          setContacts(processedContacts);\n        } catch (error) {\n          console.error('Error fetching contacts', error);\n        }\n      }\n    };\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [contact.id, \": \", contact.name, \" \", contact.email, \" \"]\n      }, contact.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Contacts, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Contacts","_s","contacts","setContacts","fetchContacts","token","localStorage","getItem","console","log","response","get","params","access_token","processedContacts","data","filter","contact","emailAddresses","length","map","index","id","name","names","displayName","email","value","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/Contacts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Contacts = () => {\n    const [contacts, setContacts] = useState([]);\n\n    useEffect(() => {\n        const fetchContacts = async () => {\n            const token = localStorage.getItem('access_token');\n            if (token) {\n                try {\n                    console.log(\"The token is \", token);\n                    const response = await axios.get('http://localhost:3001/contacts', {\n                        params: {\n                            access_token: token,\n                        },\n                    });\n                    // Process the response to create simplified contacts array with IDs\n                    const processedContacts = response.data\n                        .filter(contact => contact.emailAddresses && contact.emailAddresses.length > 0)\n                        .map((contact, index) => ({\n                            id: index + 1, // Assign incrementing ID starting from 1\n                            name: contact.names && contact.names.length > 0 ? contact.names[0].displayName : 'No Name',\n                            email: contact.emailAddresses[0].value // Assume there's at least one email address\n                        }));\n\n                    setContacts(processedContacts);\n                } catch (error) {\n                    console.error('Error fetching contacts', error);\n                }\n            }\n        };\n\n        fetchContacts();\n    }, []);\n\n    return (\n        <div>\n            <h1>Contacts</h1>\n            <ul>\n                {contacts.map(contact => (\n                    <li key={contact.id}>{contact.id}: {contact.name} {contact.email} </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Contacts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAIF,KAAK,EAAE;QACP,IAAI;UACAG,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,KAAK,CAAC;UACnC,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,EAAE;YAC/DC,MAAM,EAAE;cACJC,YAAY,EAAER;YAClB;UACJ,CAAC,CAAC;UACF;UACA,MAAMS,iBAAiB,GAAGJ,QAAQ,CAACK,IAAI,CAClCC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,cAAc,IAAID,OAAO,CAACC,cAAc,CAACC,MAAM,GAAG,CAAC,CAAC,CAC9EC,GAAG,CAAC,CAACH,OAAO,EAAEI,KAAK,MAAM;YACtBC,EAAE,EAAED,KAAK,GAAG,CAAC;YAAE;YACfE,IAAI,EAAEN,OAAO,CAACO,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACL,MAAM,GAAG,CAAC,GAAGF,OAAO,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,GAAG,SAAS;YAC1FC,KAAK,EAAET,OAAO,CAACC,cAAc,CAAC,CAAC,CAAC,CAACS,KAAK,CAAC;UAC3C,CAAC,CAAC,CAAC;UAEPxB,WAAW,CAACW,iBAAiB,CAAC;QAClC,CAAC,CAAC,OAAOc,KAAK,EAAE;UACZpB,OAAO,CAACoB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACnD;MACJ;IACJ,CAAC;IAEDxB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAA8B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlC,OAAA;MAAA8B,QAAA,EACK3B,QAAQ,CAACkB,GAAG,CAACH,OAAO,iBACjBlB,OAAA;QAAA8B,QAAA,GAAsBZ,OAAO,CAACK,EAAE,EAAC,IAAE,EAACL,OAAO,CAACM,IAAI,EAAC,GAAC,EAACN,OAAO,CAACS,KAAK,EAAC,GAAC;MAAA,GAAzDT,OAAO,CAACK,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmD,CACzE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChC,EAAA,CA3CID,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}