{"ast":null,"code":"var _jsxFileName = \"/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/individual.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Group() {\n  _s();\n  var _location$state;\n  const [people, setPeople] = useState([]);\n  const [amount, setAmount] = useState('');\n  const [checkedPeople, setCheckedPeople] = useState({});\n  const [isFullAmountOwed, setIsFullAmountOwed] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n  const [viewMode, setViewMode] = useState('transactions');\n  const [summary, setSummary] = useState(null);\n  const {\n    id\n  } = useParams();\n  const location = useLocation();\n  const emailFromLogin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/members\", {\n          params: {\n            id: id,\n            email: emailFromLogin\n          }\n        });\n        setPeople(response.data);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n      }\n    };\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/transactions\", {\n          params: {\n            id: id\n          }\n        });\n        setTransactions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    };\n    fetchMembers();\n    fetchTransactions();\n\n    // Polling for updates every 30 seconds\n    const intervalId = setInterval(fetchTransactions, 30000);\n    return () => clearInterval(intervalId); // Clear the interval on component unmount\n  }, [id, emailFromLogin]);\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setCheckedPeople({\n      ...checkedPeople,\n      [name]: checked\n    });\n  };\n  const handleFullAmountCheckboxChange = e => {\n    setIsFullAmountOwed(e.target.checked);\n  };\n  const handleAddTransaction = async () => {\n    const amountFloat = parseFloat(amount);\n    if (isNaN(amountFloat)) {\n      alert(\"Please enter a valid amount.\");\n      return;\n    }\n    const selectedPeople = Object.keys(checkedPeople).filter(person => checkedPeople[person]);\n    if (selectedPeople.length === 0) {\n      alert(\"Please select at least one person to split the amount.\");\n      return;\n    }\n    const transaction = {\n      amount: amountFloat,\n      isFullAmountOwed,\n      selectedPeople,\n      group: id,\n      towhom: emailFromLogin\n    };\n    try {\n      await axios.post(\"http://localhost:3001/transactions\", transaction);\n      // Fetch updated transactions after adding new transaction\n      const response = await axios.get(\"http://localhost:3001/transactions\", {\n        params: {\n          id: id\n        }\n      });\n      setTransactions(response.data);\n\n      // Reset form to default state\n      setAmount('');\n      setCheckedPeople({});\n      setIsFullAmountOwed(false);\n\n      // Close the offcanvas\n      document.getElementById(\"offcanvasExample\").classList.remove(\"show\");\n      document.querySelectorAll(\".offcanvas-backdrop\").forEach(el => el.remove());\n    } catch (error) {\n      console.error(\"Error adding transaction:\", error);\n    }\n  };\n  const toggleViewMode = () => {\n    const newMode = viewMode === 'transactions' ? 'summary' : 'transactions';\n    setViewMode(newMode);\n    if (newMode === 'summary') {\n      fetchSummary();\n    }\n  };\n  const handleSettle = async (settleEmail, settleAmount) => {\n    try {\n      console.log(emailFromLogin);\n      const response = await axios.post(\"http://localhost:3001/settle\", {\n        id: id,\n        email: emailFromLogin,\n        settleEmail: settleEmail,\n        amount: settleAmount\n      });\n      console.log(\"Settlement response:\", response.data);\n      // Refresh the summary after settling\n      fetchSummary();\n    } catch (error) {\n      console.error(\"Error settling amount:\", error);\n      alert(\"Failed to settle amount. Please try again.\");\n    }\n  };\n  const renderTransactions = () => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: transactions.map(transaction => {\n      let transactionClass = 'transaction-not-involved';\n      if (transaction.towhom === emailFromLogin) {\n        transactionClass = 'transaction-owed';\n      } else if (transaction.involved.includes(emailFromLogin)) {\n        transactionClass = 'transaction-involved';\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `list-group-item ${transactionClass}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Amount: \", transaction.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)\n      }, transaction._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n  const fetchSummary = async () => {\n    console.log(\"this called\");\n    try {\n      const response = await axios.post(\"http://localhost:3001/summary\", {\n        id: id,\n        email: emailFromLogin\n      });\n      setSummary(response.data);\n    } catch (error) {\n      console.error(\"Error fetching summary:\", error);\n    }\n  };\n  const renderSummary = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: summary ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Object.entries(summary.summary).map(([email, amount]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [email, \": \", amount > 0 ? 'You owe ' : 'Owes you ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: amount > 0 ? 'text-danger' : 'text-success',\n            children: [\"\\u20B9\", Math.abs(amount)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-primary\",\n          onClick: () => handleSettle(email, amount),\n          children: \"Settle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }, this)]\n      }, email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading summary...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"button\",\n      \"data-bs-toggle\": \"offcanvas\",\n      \"data-bs-target\": \"#offcanvasExample\",\n      \"aria-controls\": \"offcanvasExample\",\n      children: \"Add a transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"offcanvas offcanvas-start\",\n      tabIndex: \"-1\",\n      id: \"offcanvasExample\",\n      \"aria-labelledby\": \"offcanvasExampleLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offcanvas-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"offcanvas-title\",\n          id: \"offcanvasExampleLabel\",\n          children: \"Add a transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close\",\n          \"data-bs-dismiss\": \"offcanvas\",\n          \"aria-label\": \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offcanvas-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amountInput\",\n            className: \"form-label\",\n            children: \"Enter amount in rupees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"amountInput\",\n            className: \"form-control\",\n            type: \"text\",\n            value: amount,\n            onChange: handleAmountChange,\n            \"aria-label\": \"Enter amount in rupees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            value: \"\",\n            id: \"flexCheckDefault\",\n            checked: isFullAmountOwed,\n            onChange: handleFullAmountCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"flexCheckDefault\",\n            children: \"You are owed the full amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Split between\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), people.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              id: `flexCheck-${contact}`,\n              name: contact,\n              checked: checkedPeople[contact] || false,\n              onChange: handleCheckboxChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: `flexCheck-${contact}`,\n              children: contact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this)]\n          }, contact, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleAddTransaction,\n          children: \"Add Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: viewMode === 'transactions' ? 'Transactions' : 'Summary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            id: \"flexSwitchCheckDefault\",\n            onChange: toggleViewMode,\n            checked: viewMode === 'summary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"flexSwitchCheckDefault\",\n            children: viewMode === 'transactions' ? 'Show Summary' : 'Show Transactions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), viewMode === 'transactions' ? renderTransactions() : renderSummary()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Group, \"gnBpAs0rU8VVl5sZu6qXgjWUHtY=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Group;\nexport default Group;\nvar _c;\n$RefreshReg$(_c, \"Group\");","map":{"version":3,"names":["axios","React","useEffect","useState","useLocation","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Group","_s","_location$state","people","setPeople","amount","setAmount","checkedPeople","setCheckedPeople","isFullAmountOwed","setIsFullAmountOwed","transactions","setTransactions","viewMode","setViewMode","summary","setSummary","id","location","emailFromLogin","state","email","fetchMembers","response","get","params","data","error","console","fetchTransactions","intervalId","setInterval","clearInterval","handleAmountChange","e","target","value","handleCheckboxChange","name","checked","handleFullAmountCheckboxChange","handleAddTransaction","amountFloat","parseFloat","isNaN","alert","selectedPeople","Object","keys","filter","person","length","transaction","group","towhom","post","document","getElementById","classList","remove","querySelectorAll","forEach","el","toggleViewMode","newMode","fetchSummary","handleSettle","settleEmail","settleAmount","log","renderTransactions","className","children","map","transactionClass","involved","includes","fileName","_jsxFileName","lineNumber","columnNumber","_id","renderSummary","entries","Math","abs","onClick","type","tabIndex","htmlFor","onChange","contact","_c","$RefreshReg$"],"sources":["/Users/sanchitjalan/Desktop/extra/mern_split_wise_project/frontend/src/components/individual.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\n\nfunction Group() {\n    const [people, setPeople] = useState([]);\n    const [amount, setAmount] = useState('');\n    const [checkedPeople, setCheckedPeople] = useState({});\n    const [isFullAmountOwed, setIsFullAmountOwed] = useState(false);\n    const [transactions, setTransactions] = useState([]);\n    const [viewMode, setViewMode] = useState('transactions');\n    const [summary, setSummary] = useState(null);\n    const { id } = useParams();\n    const location = useLocation();\n    const emailFromLogin = location.state?.email;\n\n    useEffect(() => {\n        const fetchMembers = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:3001/members\", {\n                    params: {\n                        id: id,\n                        email: emailFromLogin\n                    },\n                });\n                setPeople(response.data);\n            } catch (error) {\n                console.error(\"Error fetching contacts:\", error);\n            }\n        };\n\n        const fetchTransactions = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:3001/transactions\", {\n                    params: {\n                        id: id\n                    },\n                });\n                setTransactions(response.data);\n            } catch (error) {\n                console.error(\"Error fetching transactions:\", error);\n            }\n        };\n\n        fetchMembers();\n        fetchTransactions();\n\n        // Polling for updates every 30 seconds\n        const intervalId = setInterval(fetchTransactions, 30000);\n\n        return () => clearInterval(intervalId); // Clear the interval on component unmount\n    }, [id, emailFromLogin]);\n\n    const handleAmountChange = (e) => {\n        setAmount(e.target.value);\n    };\n\n    const handleCheckboxChange = (e) => {\n        const { name, checked } = e.target;\n        setCheckedPeople({\n            ...checkedPeople,\n            [name]: checked,\n        });\n    };\n\n    const handleFullAmountCheckboxChange = (e) => {\n        setIsFullAmountOwed(e.target.checked);\n    };\n\n    const handleAddTransaction = async () => {\n        const amountFloat = parseFloat(amount);\n        if (isNaN(amountFloat)) {\n            alert(\"Please enter a valid amount.\");\n            return;\n        }\n\n        const selectedPeople = Object.keys(checkedPeople).filter((person) => checkedPeople[person]);\n        if (selectedPeople.length === 0) {\n            alert(\"Please select at least one person to split the amount.\");\n            return;\n        }\n\n        const transaction = {\n            amount: amountFloat,\n            isFullAmountOwed,\n            selectedPeople,\n            group: id,\n            towhom: emailFromLogin,\n        };\n\n        try {\n            await axios.post(\"http://localhost:3001/transactions\", transaction);\n            // Fetch updated transactions after adding new transaction\n            const response = await axios.get(\"http://localhost:3001/transactions\", {\n                params: {\n                    id: id\n                },\n            });\n            setTransactions(response.data);\n\n            // Reset form to default state\n            setAmount('');\n            setCheckedPeople({});\n            setIsFullAmountOwed(false);\n\n            // Close the offcanvas\n            document.getElementById(\"offcanvasExample\").classList.remove(\"show\");\n            document.querySelectorAll(\".offcanvas-backdrop\").forEach(el => el.remove());\n        } catch (error) {\n            console.error(\"Error adding transaction:\", error);\n        }\n    };\n\n    const toggleViewMode = () => {\n        const newMode = viewMode === 'transactions' ? 'summary' : 'transactions';\n        setViewMode(newMode);\n        if (newMode === 'summary') {\n            fetchSummary();\n        }\n    };\n    const handleSettle = async (settleEmail, settleAmount) => {\n        try {\n            console.log(emailFromLogin)\n            const response = await axios.post(\"http://localhost:3001/settle\", {\n                id: id,\n                email: emailFromLogin,\n                settleEmail: settleEmail,\n                amount: settleAmount\n            });\n            console.log(\"Settlement response:\", response.data);\n            // Refresh the summary after settling\n            fetchSummary();\n        } catch (error) {\n            console.error(\"Error settling amount:\", error);\n            alert(\"Failed to settle amount. Please try again.\");\n        }\n    };\n    const renderTransactions = () => (\n        <ul className=\"list-group\">\n            {transactions.map((transaction) => {\n                let transactionClass = 'transaction-not-involved';\n                if (transaction.towhom === emailFromLogin) {\n                    transactionClass = 'transaction-owed';\n                } else if (transaction.involved.includes(emailFromLogin)) {\n                    transactionClass = 'transaction-involved';\n                }\n\n                return (\n                    <li className={`list-group-item ${transactionClass}`} key={transaction._id}>\n                        <span>Amount: {transaction.amount}</span>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n\n    const fetchSummary = async () => {\n        console.log(\"this called\");\n        try {\n            const response = await axios.post(\"http://localhost:3001/summary\", {\n                id: id,\n                email: emailFromLogin\n            });\n            setSummary(response.data);\n        } catch (error) {\n            console.error(\"Error fetching summary:\", error);\n        }\n    };\n    const renderSummary = () => (\n        <div>\n            {summary ? (\n                <ul className=\"list-group\">\n                    {Object.entries(summary.summary).map(([email, amount]) => (\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={email}>\n                            <div>\n                                <span>{email}: {amount > 0 ? 'You owe ' : 'Owes you '}</span>\n                                <span className={amount > 0 ? 'text-danger' : 'text-success'}>\n                                    ₹{Math.abs(amount)}\n                                </span>\n                            </div>\n                            <button \n                                className=\"btn btn-sm btn-outline-primary\"\n                                onClick={() => handleSettle(email, (amount))}\n                            >\n                                Settle\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>Loading summary...</p>\n            )}\n        </div>\n    );\n\n    return (\n        <>\n            <button className=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasExample\" aria-controls=\"offcanvasExample\">\n                Add a transaction\n            </button>\n\n            <div className=\"offcanvas offcanvas-start\" tabIndex=\"-1\" id=\"offcanvasExample\" aria-labelledby=\"offcanvasExampleLabel\">\n                <div className=\"offcanvas-header\">\n                    <h5 className=\"offcanvas-title\" id=\"offcanvasExampleLabel\">Add a transaction</h5>\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>\n                </div>\n                <div className=\"offcanvas-body\">\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"amountInput\" className=\"form-label\">Enter amount in rupees</label>\n                        <input\n                            id=\"amountInput\"\n                            className=\"form-control\"\n                            type=\"text\"\n                            value={amount}\n                            onChange={handleAmountChange}\n                            aria-label=\"Enter amount in rupees\"\n                        />\n                    </div>\n                    <div className=\"form-check mb-3\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            value=\"\"\n                            id=\"flexCheckDefault\"\n                            checked={isFullAmountOwed}\n                            onChange={handleFullAmountCheckboxChange}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                            You are owed the full amount\n                        </label>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Split between</label>\n                        {people.map((contact) => (\n                            <div className=\"form-check\" key={contact}>\n                                <input\n                                    className=\"form-check-input\"\n                                    type=\"checkbox\"\n                                    id={`flexCheck-${contact}`}\n                                    name={contact}\n                                    checked={checkedPeople[contact] || false}\n                                    onChange={handleCheckboxChange}\n                                />\n                                <label className=\"form-check-label\" htmlFor={`flexCheck-${contact}`}>\n                                    {contact}\n                                </label>\n                            </div>\n                        ))}\n                    </div>\n                    <button className=\"btn btn-primary\" onClick={handleAddTransaction}>\n                        Add Transaction\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"mt-4\">\n                <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                    <h3>{viewMode === 'transactions' ? 'Transactions' : 'Summary'}</h3>\n                    <div className=\"form-check form-switch\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            id=\"flexSwitchCheckDefault\"\n                            onChange={toggleViewMode}\n                            checked={viewMode === 'summary'}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n                            {viewMode === 'transactions' ? 'Show Summary' : 'Show Transactions'}\n                        </label>\n                    </div>\n                </div>\n                {viewMode === 'transactions' ? renderTransactions() : renderSummary()}\n            </div>\n        </>\n    );\n}\n\nexport default Group;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}