{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gupta ji\\\\Desktop\\\\harshit\\\\hello\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleLogin, useGoogleLogin } from '@react-oauth/google';\nimport { Link, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = '716338759481-3t52ihgb9pa4ifk96mjnlehh8c0idr07.apps.googleusercontent.com';\nconst Login = ({\n  onSuccess,\n  onFailure\n}) => {\n  _s();\n  var _location$state;\n  const googleLogin = useGoogleLogin({\n    onSuccess,\n    onFailure,\n    flow: 'auth-code',\n    // Use 'auth-code' for the authorization code flow\n    scope: 'https://www.googleapis.com/auth/contacts.readonly',\n    client_id: CLIENT_ID,\n    redirect_uri: ''\n  });\n  const location = useLocation();\n  const emailFromLogin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email; // Access email from state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/contacts\",\n      className: \"list-group-item list-group-item-action \",\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: \"list-group-item list-group-item-action\",\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"list-group-item list-group-item-action\",\n      onClick: () => googleLogin(),\n      children: \"Sign in with Google to import your Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"6hJKQlMGfd6fUR+Lwi2vOkFxygc=\", false, function () {\n  return [useGoogleLogin, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","GoogleLogin","useGoogleLogin","Link","useLocation","jsxDEV","_jsxDEV","CLIENT_ID","Login","onSuccess","onFailure","_s","_location$state","googleLogin","flow","scope","client_id","redirect_uri","location","emailFromLogin","state","email","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gupta ji/Desktop/harshit/hello/frontend/src/components/Login.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleLogin, useGoogleLogin } from '@react-oauth/google';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nconst CLIENT_ID = '716338759481-3t52ihgb9pa4ifk96mjnlehh8c0idr07.apps.googleusercontent.com';\r\n\r\nconst Login = ({ onSuccess, onFailure }) => {\r\n  const googleLogin = useGoogleLogin({\r\n    onSuccess,onFailure,\r\n    flow: 'auth-code', // Use 'auth-code' for the authorization code flow\r\n    scope:'https://www.googleapis.com/auth/contacts.readonly',\r\n    client_id:CLIENT_ID,\r\n    redirect_uri:''\r\n  });\r\n  const location = useLocation();\r\n  const emailFromLogin = location.state?.email; // Access email from state\r\n  return (\r\n    <div className=\"list-group\">\r\n      <Link to=\"/contacts\" className=\"list-group-item list-group-item-action \">\r\n        Friends\r\n      </Link>\r\n      <Link to=\"#\" className=\"list-group-item list-group-item-action\">\r\n        Groups\r\n      </Link>\r\n      <button className=\"list-group-item list-group-item-action\" onClick={() => googleLogin()}>\r\n      Sign in with Google to import your Contacts\r\n    </button>\r\n      {/* <GoogleLogin\r\n        render={renderProps}\r\n        buttonText=\"Sign with Google to Import Contacts\"\r\n        onSuccess={onSuccess}\r\n        onFailure={onFailure}\r\n        scope=\"https://www.googleapis.com/auth/contacts.readonly\"\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,cAAc,QAAQ,qBAAqB;AACjE,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrD,MAAMC,SAAS,GAAG,0EAA0E;AAE5F,MAAMC,KAAK,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAC1C,MAAMC,WAAW,GAAGX,cAAc,CAAC;IACjCO,SAAS;IAACC,SAAS;IACnBI,IAAI,EAAE,WAAW;IAAE;IACnBC,KAAK,EAAC,mDAAmD;IACzDC,SAAS,EAACT,SAAS;IACnBU,YAAY,EAAC;EACf,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,cAAc,IAAAP,eAAA,GAAGM,QAAQ,CAACE,KAAK,cAAAR,eAAA,uBAAdA,eAAA,CAAgBS,KAAK,CAAC,CAAC;EAC9C,oBACEf,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBjB,OAAA,CAACH,IAAI;MAACqB,EAAE,EAAC,WAAW;MAACF,SAAS,EAAC,yCAAyC;MAAAC,QAAA,EAAC;IAEzE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPtB,OAAA,CAACH,IAAI;MAACqB,EAAE,EAAC,GAAG;MAACF,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAAC;IAEhE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPtB,OAAA;MAAQgB,SAAS,EAAC,wCAAwC;MAACO,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAAC,CAAE;MAAAU,QAAA,EAAC;IAE3F;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BIH,KAAK;EAAA,QACWN,cAAc,EAOjBE,WAAW;AAAA;AAAA0B,EAAA,GARxBtB,KAAK;AAgCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}