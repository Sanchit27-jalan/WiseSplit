{"ast":null,"code":"var _jsxFileName = \"/home/harshit/Desktop/random/project/mern_split_wise_project/frontend/src/components/Groups.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Groups() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const emailFromLogin = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email;\n  console.log(emailFromLogin);\n  const spacing = 18;\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/contacts\", {\n          params: {\n            email: emailFromLogin\n          }\n        });\n\n        // Process the response to create simplified contacts array with IDs\n        const processedContacts = response.data.map((contact, index) => ({\n          id: index + 1,\n          // Assign incrementing ID starting from 1\n          email: contact // Assume there's at least one email address\n        }));\n        setContacts(processedContacts);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n        // Handle error state or logging as needed\n      }\n    };\n    fetchContacts(); // Call fetchContacts when component mounts\n  }, [emailFromLogin]); // Empty dependency array ensures fetchContacts runs only once\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      style: {\n        width: spacing + 'em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-title\",\n          children: \"Card title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(Groups, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = Groups;\nvar _c;\n$RefreshReg$(_c, \"Groups\");","map":{"version":3,"names":["React","useEffect","useState","axios","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Groups","_s","_location$state","location","emailFromLogin","state","email","console","log","spacing","fetchContacts","response","get","params","processedContacts","data","map","contact","index","id","setContacts","error","children","class","style","width","fileName","_jsxFileName","lineNumber","columnNumber","href","_c","$RefreshReg$"],"sources":["/home/harshit/Desktop/random/project/mern_split_wise_project/frontend/src/components/Groups.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nexport default function Groups() {\n  const location = useLocation();\n  const emailFromLogin = location.state?.email;\n  console.log(emailFromLogin);\n  const spacing=18;\n  useEffect(() => {\n    const fetchContacts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/contacts\", {\n          params: {\n            email: emailFromLogin,\n          },\n        });\n\n        // Process the response to create simplified contacts array with IDs\n        const processedContacts = response.data.map((contact, index) => ({\n          id: index + 1, // Assign incrementing ID starting from 1\n          email: contact, // Assume there's at least one email address\n        }));\n\n        setContacts(processedContacts);\n      } catch (error) {\n        console.error(\"Error fetching contacts:\", error);\n        // Handle error state or logging as needed\n      }\n    };\n\n    fetchContacts(); // Call fetchContacts when component mounts\n  }, [emailFromLogin]); // Empty dependency array ensures fetchContacts runs only once\n\n  return (\n<>\n<div class=\"card\" style={{width: spacing + 'em'}}>\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">Card title</h5>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div>\n</div>\n\n</>   \n\n  \n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC/C,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAC/B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,cAAc,IAAAF,eAAA,GAAGC,QAAQ,CAACE,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBI,KAAK;EAC5CC,OAAO,CAACC,GAAG,CAACJ,cAAc,CAAC;EAC3B,MAAMK,OAAO,GAAC,EAAE;EAChBjB,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,gCAAgC,EAAE;UACjEC,MAAM,EAAE;YACNP,KAAK,EAAEF;UACT;QACF,CAAC,CAAC;;QAEF;QACA,MAAMU,iBAAiB,GAAGH,QAAQ,CAACI,IAAI,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,MAAM;UAC/DC,EAAE,EAAED,KAAK,GAAG,CAAC;UAAE;UACfZ,KAAK,EAAEW,OAAO,CAAE;QAClB,CAAC,CAAC,CAAC;QAEHG,WAAW,CAACN,iBAAiB,CAAC;MAChC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;MACF;IACF,CAAC;IAEDX,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACFP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,eACAzB,OAAA;MAAK0B,KAAK,EAAC,MAAM;MAACC,KAAK,EAAE;QAACC,KAAK,EAAEhB,OAAO,GAAG;MAAI,CAAE;MAAAa,QAAA,eAC/CzB,OAAA;QAAK0B,KAAK,EAAC,WAAW;QAAAD,QAAA,gBACpBzB,OAAA;UAAI0B,KAAK,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtChC,OAAA;UAAGiC,IAAI,EAAC,GAAG;UAACP,KAAK,EAAC,iBAAiB;UAAAD,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAEJ,CAAC;AAIH;AAAC5B,EAAA,CA3CuBD,MAAM;EAAA,QACXL,WAAW;AAAA;AAAAoC,EAAA,GADN/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}